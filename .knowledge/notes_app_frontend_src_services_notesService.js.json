{"is_source_file": true, "format": "JavaScript", "description": "This file provides CRUD (Create, Read, Update, Delete) operations for managing notes, utilizing either Supabase for cloud storage if configured or localStorage as a fallback. It includes functions for initializing storage, listing notes with optional filtering, creating new notes, updating existing notes, and deleting notes. The code normalizes note data for consistency and handles asynchronous operations to interact with external databases or local storage.", "external_files": ["../supabaseClient"], "external_methods": ["supabase.from()", "supabase.from().select()", "supabase.from().insert()", "supabase.from().update()", "supabase.from().delete()", "supabase.from().eq()"], "published": ["initNotesStorage", "listNotes", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "uid()", "description": "Generates a unique identifier using random string and timestamp.", "scope": "", "scopeKind": ""}, {"name": "nowISO()", "description": "Returns the current date and time in ISO 8601 format.", "scope": "", "scopeKind": ""}, {"name": "loadLocal()", "description": "Loads notes from localStorage; returns an array of notes or empty array if none found.", "scope": "", "scopeKind": ""}, {"name": "saveLocal(items)", "description": "Saves notes array to localStorage.", "scope": "", "scopeKind": ""}, {"name": "normalize(note)", "description": "Ensures a note object has all necessary fields with default values where missing.", "scope": "", "scopeKind": ""}, {"name": "initNotesStorage()", "description": "Initializes the notes storage, ensuring the database schema exists or pre-populating local storage with a sample note if empty.", "scope": "", "scopeKind": ""}, {"name": "listNotes({ query = '' } = {})", "description": "Fetches and returns a list of notes, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "createNote({ title, content })", "description": "Creates a new note with provided title and content, assigns a unique id, and stores it.", "scope": "", "scopeKind": ""}, {"name": "updateNote(id, { title, content })", "description": "Updates an existing note identified by id with new title and content.", "scope": "", "scopeKind": ""}, {"name": "deleteNote(id)", "description": "Deletes a note by id, returning a boolean indicating success.", "scope": "", "scopeKind": ""}], "calls": ["supabase.from('notes').select()", "supabase.from('notes').insert()", "supabase.from('notes').update()", "supabase.from('notes').delete()", "supabase.from('notes').eq()"], "search-terms": ["notes CRUD", "notes storage", "localStorage fallback", "Supabase integration", "Notes service functions", "Notes normalization", "Note generate id"], "state": 2, "file_id": 14, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^const STORAGE_KEY = 'notes_app_items_v1';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^export async function createNote({ title, content }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ title, content })"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^export async function deleteNote(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "initNotesStorage", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^export async function initNotesStorage() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^export async function listNotes({ query = '' } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ query = '' } = {})"}, {"_type": "tag", "name": "loadLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^function loadLocal() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "normalize", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^function normalize(note) {$/", "language": "JavaScript", "kind": "function", "signature": "(note)"}, {"_type": "tag", "name": "nowISO", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^function nowISO() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "saveLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^function saveLocal(items) {$/", "language": "JavaScript", "kind": "function", "signature": "(items)"}, {"_type": "tag", "name": "uid", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^function uid() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-89071-89080/notes_app_frontend/src/services/notesService.js", "pattern": "/^export async function updateNote(id, { title, content }) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, { title, content })"}], "hash": "3e9fff8e65daef68ecb0534ba51050f3", "format-version": 4, "code-base-name": "notes_app_frontend", "filename": "notes_app_frontend/src/services/notesService.js", "revision_history": [{"31": ""}]}